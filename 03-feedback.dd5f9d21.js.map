{"mappings":"YAuBe,SAAAA,EAAUC,EAAOC,EAAUC,GAKrCA,IAMAC,EANAD,KAAW,GAJfE,EAAAC,EACCC,kBADD,IAAAF,KAAAG,EAAAF,EAECG,iBAFD,IAAAD,KAAAE,EAAAJ,EAGCK,oBAHD,IAAAD,OAGgBE,EAHhBF,EAWIG,GAAY,EAGZC,EAAW,EAGf,SAASC,IACJX,GACHY,aAAaZ,E,CAgBf,SAASa,IAAuB,QAAAC,EAAAC,UAAAC,OAAZC,EAAY,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAZF,EAAYE,GAAAJ,UAAAI,GAC3BC,MAAOC,KACPC,EAAUC,KAAKC,MAAQd,EAO3B,SAASe,IACRf,EAAWa,KAAKC,MAChB1B,EAAS4B,MAAMN,EAAMH,E,CAOtB,SAASU,IACR3B,OAAYQ,C,CAfTC,IAkBCJ,IAAaE,GAAiBP,GAMlCyB,IAGDd,SAEqBH,IAAjBD,GAA8Be,EAAUzB,EACvCQ,GAMHK,EAAWa,KAAKC,MACXrB,IACJH,EAAY4B,WAAWrB,EAAeoB,EAAQF,EAAM5B,KAOrD4B,KAEwB,IAAftB,IAYVH,EAAY4B,WACXrB,EAAeoB,EAAQF,OACNjB,IAAjBD,EAA6BV,EAAQyB,EAAUzB,I,CAQlD,OAHAgB,EAAQgB,OAjFCA,SAAO9B,GACkBA,IAAjC+B,GAAiC/B,GAAW,IAApCgC,oBAAR,IAAAD,KACAnB,IACAF,GAAasB,C,EAiFPlB,C,CCpIR,SAASmB,EAAmBC,EAAKC,GAC/B,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,ECF7C,IAAMC,EAAOC,SAASC,cAAc,kBACpCF,EAAKG,iBAAiB,SAiBtB,SAAoBC,GAClBA,EAAEC,iBACF,IAA2BC,EAAAF,EAAEG,cAAcC,SAAnCC,EAAmBH,EAAnBG,MAAOV,EAAYO,EAAZP,QAEfW,EAAa,CACXD,MAAOA,EAAMlB,MACbQ,QAASA,EAAQR,O,IAtBrBS,EAAKG,iBAAiB,UA0BtB,SAAkBC,GAChBA,EAAEC,iBACFP,QAAQa,IAAIP,EAAEG,cAAcC,UAC5B,IAA2BF,EAAAF,EAAEG,cAAcC,SAAnCC,EAAmBH,EAAnBG,MAAOV,EAAYO,EAAZP,QAEfD,QAAQa,IAAI,8BACZb,QAAQa,IAAI,GAAkBC,OAAfH,EAAMI,KAAK,MAAgBD,OAAZH,EAAMlB,QACpCO,QAAQa,IAAI,GAAoBC,OAAjBb,EAAQc,KAAK,MAAkBD,OAAdb,EAAQR,QAExCS,EAAKc,QACLnB,aAAaoB,WAAWC,E,IAlC1B,IAGEC,EAIiBC,EACEC,EARfH,EAAgB,sBAEhBI,EAC2C,QAA/CH,EAAAxB,KAAK4B,MAAM1B,aAAa2B,QAAQN,WAAe,IAA/CC,IAAmD,GAC/CM,EAAavB,EAAKE,cAAc,kBAChCsB,EAAexB,EAAKE,cAAc,oBAExCqB,EAAWhC,MAAyB,QAAjB2B,EAAAE,EAAYX,aAAK,IAAjBS,IAAqB,GACxCM,EAAajC,MAA2B,QAAnB4B,EAAAC,EAAYrB,eAAO,IAAnBoB,IAAuB,GAE5C,IAAMT,EAAezD,EAAS,KAAK,SAAAwE,GACjCpC,EAAmB2B,EAAeS,E","sources":["node_modules/throttle-debounce/throttle.js","src/js/jsModuls/webStorade/workWithData.js","src/js/03-feedback.js"],"sourcesContent":["/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nexport default function (delay, callback, options) {\n\tconst {\n\t\tnoTrailing = false,\n\t\tnoLeading = false,\n\t\tdebounceMode = undefined\n\t} = options || {};\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel(options) {\n\t\tconst { upcomingOnly = false } = options || {};\n\t\tclearExistingTimeout();\n\t\tcancelled = !upcomingOnly;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (!noLeading && debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`\n\t\t\t * and noLeading != true.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\tif (noLeading) {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode with noLeading, if `delay` time has\n\t\t\t\t * been exceeded, update `lastExec` and schedule `callback`\n\t\t\t\t * to execute after `delay` ms.\n\t\t\t\t */\n\t\t\t\tlastExec = Date.now();\n\t\t\t\tif (!noTrailing) {\n\t\t\t\t\ttimeoutID = setTimeout(debounceMode ? clear : exec, delay);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n\t\t\t\t * `callback`.\n\t\t\t\t */\n\t\t\t\texec();\n\t\t\t}\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","function saveToLocalStorage(key, value) {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nfunction readFromLocalStorage(key) {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nfunction removeFromLocalStorage(key) {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Remove state error: \", error.message);\n  }\n};\n\nexport {\n  saveToLocalStorage,\n  readFromLocalStorage,\n  removeFromLocalStorage,\n};","import { throttle } from 'throttle-debounce';\nimport { saveToLocalStorage } from './jsModuls/webStorade/workWithData';\n\nconst form = document.querySelector('.feedback-form');\nform.addEventListener('input', inputValue);\nform.addEventListener('submit', onSubmit);\n\nconst DATA_KEY_NAME = 'feedback-form-state';\n\nconst checkValues =\n  JSON.parse(localStorage.getItem(DATA_KEY_NAME)) ?? '';\nconst emailInput = form.querySelector('[name=\"email\"]');\nconst messageInput = form.querySelector('[name=\"message\"]');\n\nemailInput.value = checkValues.email ?? '';\nmessageInput.value = checkValues.message ?? '';\n\nconst throttleFunc = throttle(500, feedbackFormData => {\n  saveToLocalStorage(DATA_KEY_NAME, feedbackFormData)\n});\n\nfunction inputValue(e) {\n  e.preventDefault();\n  const { email, message } = e.currentTarget.elements;\n\n  throttleFunc({\n    email: email.value,\n    message: message.value,\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  console.log(e.currentTarget.elements);\n  const { email, message } = e.currentTarget.elements;\n\n  console.log(\"Відправлено наступні дані:\");\n  console.log(`${email.name}: ${email.value}`);\n  console.log(`${message.name}: ${message.value}`);\n  \n  form.reset();\n  localStorage.removeItem(DATA_KEY_NAME);\n}\n\n"],"names":["$d9010ee870d463b5$export$de363e709c412c8a","delay","callback","options","timeoutID","_ref$noTrailing","_ref","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","_len","arguments","length","arguments_","Array","_key","self","this","elapsed","Date","now","exec","apply","clear","setTimeout","cancel","_ref2$upcomingOnly","upcomingOnly","$30e222ba423b4d4c$export$1b8cd2d0ef9a8e5d","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$b00c40859be242c5$var$form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","email","$b00c40859be242c5$var$throttleFunc","log","concat","name","reset","removeItem","$b00c40859be242c5$var$DATA_KEY_NAME","$b00c40859be242c5$var$ref","$b00c40859be242c5$var$_email","$b00c40859be242c5$var$_message","$b00c40859be242c5$var$checkValues","parse","getItem","$b00c40859be242c5$var$emailInput","$b00c40859be242c5$var$messageInput","feedbackFormData"],"version":3,"file":"03-feedback.dd5f9d21.js.map"}